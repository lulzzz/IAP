# -*- coding: utf-8 -*-
# Generated by Django 1.11.6 on 2018-06-05 04:05
from __future__ import unicode_literals

import core.mixins_model
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='DimConstructionType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=45, unique=True, validators=[django.core.validators.RegexValidator(code='nomatch', message='Length must be at least 2', regex='^.{2,}$')], verbose_name='construction type')),
            ],
            options={
                'verbose_name': 'Construction Type',
            },
            bases=(models.Model, core.mixins_model.ModelFormFieldNames),
        ),
        migrations.CreateModel(
            name='DimCustomer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('market', models.CharField(blank=True, max_length=45, null=True)),
                ('dc_plt', models.CharField(blank=True, max_length=45, null=True, verbose_name='DC plant')),
                ('sold_to_party', models.CharField(max_length=45)),
                ('sold_to_category', models.CharField(blank=True, max_length=45, null=True)),
                ('is_active', models.BooleanField()),
                ('is_placeholder', models.BooleanField()),
                ('placeholder_level', models.CharField(blank=True, max_length=45, null=True)),
            ],
            options={
                'verbose_name': 'Customer',
            },
            bases=(models.Model, core.mixins_model.ModelFormFieldNames),
        ),
        migrations.CreateModel(
            name='DimDate',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('full_date', models.DateField()),
                ('year_accounting', models.SmallIntegerField()),
                ('year_cw_accounting', models.CharField(max_length=8)),
                ('year_month_accounting', models.CharField(max_length=7)),
                ('month_name_accounting', models.CharField(max_length=45)),
                ('month_name_short_accounting', models.CharField(max_length=3)),
                ('day_of_week', models.IntegerField()),
                ('day_name_of_week', models.CharField(max_length=10)),
                ('is_last_day_of_month', models.IntegerField()),
                ('is_weekend_day', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='DimDemandCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=45, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='DimFactory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('plant_code', models.CharField(max_length=45, unique=True)),
                ('vendor_code', models.CharField(max_length=45)),
                ('vendor_name', models.CharField(blank=True, max_length=200, null=True)),
                ('port', models.CharField(blank=True, max_length=45, null=True)),
                ('is_active', models.BooleanField()),
                ('is_placeholder', models.BooleanField(default=False)),
                ('placeholder_level', models.CharField(blank=True, max_length=45, null=True)),
            ],
            options={
                'verbose_name': 'Factory',
            },
            bases=(models.Model, core.mixins_model.ModelFormFieldNames),
        ),
        migrations.CreateModel(
            name='DimLocation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('region', models.CharField(max_length=45)),
                ('country', models.CharField(max_length=100, unique=True)),
                ('country_code_a2', models.CharField(max_length=2, unique=True, validators=[django.core.validators.RegexValidator(code='nomatch', message='Length must be 2', regex='^.{2}$')], verbose_name='country code A2')),
                ('country_code_a3', models.CharField(max_length=3, unique=True, validators=[django.core.validators.RegexValidator(code='nomatch', message='Length must be 3', regex='^.{3}$')], verbose_name='country code A3')),
            ],
            options={
                'verbose_name': 'Location',
            },
            bases=(models.Model, core.mixins_model.ModelFormFieldNames),
        ),
        migrations.CreateModel(
            name='DimProduct',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('material', models.CharField(max_length=45, unique=True)),
                ('material_text_short', models.CharField(blank=True, max_length=200, null=True)),
                ('material_description', models.CharField(blank=True, max_length=200, null=True)),
                ('status', models.CharField(blank=True, max_length=200, null=True)),
                ('main_description', models.CharField(blank=True, max_length=200, null=True)),
                ('group_description', models.CharField(blank=True, max_length=200, null=True)),
                ('family', models.CharField(blank=True, max_length=200, null=True)),
                ('pgs', models.CharField(blank=True, max_length=200, null=True, verbose_name='PGS')),
                ('segment_description', models.CharField(blank=True, max_length=200, null=True)),
                ('gender_label', models.CharField(blank=True, max_length=200, null=True)),
                ('product_type', models.CharField(blank=True, max_length=200, null=True)),
                ('business_life_cyle', models.IntegerField(default=0)),
                ('is_placeholder', models.BooleanField(default=False)),
                ('placeholder_level', models.CharField(blank=True, max_length=45, null=True)),
                ('dim_construction_type', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='app_dpp.DimConstructionType')),
            ],
            options={
                'verbose_name': 'Product',
            },
            bases=(models.Model, core.mixins_model.ModelFormFieldNames),
        ),
        migrations.CreateModel(
            name='DimProductionLine',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('line', models.CharField(max_length=100)),
                ('dim_factory', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='app_dpp.DimFactory')),
            ],
            options={
                'verbose_name': 'Production Line',
            },
            bases=(models.Model, core.mixins_model.ModelFormFieldNames),
        ),
        migrations.CreateModel(
            name='DimRelease',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=45, unique=True)),
                ('comment', models.CharField(blank=True, max_length=100, null=True)),
                ('dim_date', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='app_dpp.DimDate')),
            ],
        ),
        migrations.CreateModel(
            name='FactDemand',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dim_date_logic_unconstrained', models.CharField(blank=True, max_length=1000, null=True)),
                ('dim_date_logic_constrained', models.CharField(blank=True, max_length=1000, null=True)),
                ('dim_date_logic_overwritten', models.CharField(blank=True, max_length=1000, null=True)),
                ('dim_date_logic_final', models.CharField(blank=True, max_length=1000, null=True)),
                ('quantity', models.IntegerField(default=0)),
                ('dim_date_allocation_constrained', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='dim_date_allocation_constrained', to='app_dpp.DimDate')),
                ('dim_date_allocation_final', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='dim_date_allocation_final', to='app_dpp.DimDate')),
                ('dim_date_allocation_overwritten', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='dim_date_allocation_overwritten', to='app_dpp.DimDate')),
                ('dim_date_allocation_unconstrained', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='dim_date_allocation_unconstrained', to='app_dpp.DimDate')),
                ('dim_demand_category', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='app_dpp.DimDemandCategory')),
                ('dim_product', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='app_dpp.DimProduct')),
                ('dim_production_line', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='app_dpp.DimProductionLine')),
                ('dim_release', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='app_dpp.DimRelease')),
            ],
            bases=(models.Model, core.mixins_model.ModelFormFieldNames),
        ),
        migrations.CreateModel(
            name='HelperFactoryCapacityAdjustment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('plant_code', models.CharField(max_length=45, unique=True)),
                ('percentage', models.FloatField()),
                ('percentage_adjustment', models.FloatField()),
            ],
            options={
                'verbose_name': 'Factory Capacity Adjustment',
            },
            bases=(models.Model, core.mixins_model.ModelFormFieldNames),
        ),
        migrations.CreateModel(
            name='HelperMapping',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(max_length=100)),
                ('parent', models.CharField(max_length=200)),
                ('child', models.CharField(max_length=100)),
                ('comment', models.CharField(blank=True, max_length=1000, null=True)),
            ],
            options={
                'verbose_name': 'Mapping',
            },
            bases=(models.Model, core.mixins_model.ModelFormFieldNames),
        ),
        migrations.CreateModel(
            name='SourceMetadata',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('table_name', models.CharField(max_length=100)),
                ('etl_type', models.CharField(max_length=45)),
                ('src_name', models.CharField(max_length=100, verbose_name='source file')),
                ('timestamp_file', models.DateTimeField(verbose_name='last modified date')),
                ('state', models.CharField(max_length=3)),
            ],
            bases=(models.Model, core.mixins_model.ModelFormFieldNames),
        ),
        migrations.CreateModel(
            name='SystemLogFile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('system', models.CharField(max_length=30)),
                ('source', models.CharField(max_length=100)),
                ('category', models.CharField(max_length=100)),
                ('value', models.CharField(max_length=300)),
            ],
            bases=(models.Model, core.mixins_model.ModelFormFieldNames),
        ),
        migrations.AlterUniqueTogether(
            name='helpermapping',
            unique_together=set([('category', 'child')]),
        ),
        migrations.AddField(
            model_name='dimfactory',
            name='dim_location',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='app_dpp.DimLocation', verbose_name='country code A2'),
        ),
        migrations.AddField(
            model_name='dimcustomer',
            name='dim_location',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='app_dpp.DimLocation', verbose_name='country code A2'),
        ),
        migrations.AlterUniqueTogether(
            name='dimproductionline',
            unique_together=set([('dim_factory', 'line')]),
        ),
    ]
