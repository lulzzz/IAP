# -*- coding: utf-8 -*-
# Generated by Django 1.11.6 on 2018-05-12 10:10
from __future__ import unicode_literals

import core.mixins_model
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='DimBusiness',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('brand', models.CharField(max_length=45)),
                ('product_line', models.CharField(max_length=45)),
            ],
            options={
                'db_table': 'dim_business',
            },
            bases=(models.Model, core.mixins_model.ModelFormFieldNames),
        ),
        migrations.CreateModel(
            name='DimBuyingProgram',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(blank=True, max_length=45, null=True)),
                ('name', models.CharField(max_length=45)),
                ('name_short', models.CharField(blank=True, max_length=45, null=True)),
                ('dim_business', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='app_pdas.DimBusiness')),
            ],
            options={
                'db_table': 'dim_buying_program',
            },
        ),
        migrations.CreateModel(
            name='DimConstructionType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=45, unique=True, validators=[django.core.validators.RegexValidator(code='nomatch', message='Length must be at least 2', regex='^.{2,}$')], verbose_name='construction type')),
            ],
            options={
                'verbose_name': 'Construction Type',
                'db_table': 'dim_construction_type',
            },
            bases=(models.Model, core.mixins_model.ModelFormFieldNames),
        ),
        migrations.CreateModel(
            name='DimCustomer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('market', models.CharField(blank=True, max_length=45, null=True)),
                ('dc_plt', models.CharField(blank=True, max_length=45, null=True, verbose_name='DC plant')),
                ('sold_to_party', models.CharField(max_length=45)),
                ('sold_to_category', models.CharField(blank=True, max_length=45, null=True)),
                ('is_active', models.BooleanField()),
                ('is_placeholder', models.BooleanField()),
                ('placeholder_level', models.CharField(blank=True, max_length=45, null=True)),
            ],
            options={
                'verbose_name': 'Customer',
                'db_table': 'dim_customer',
            },
            bases=(models.Model, core.mixins_model.ModelFormFieldNames),
        ),
        migrations.CreateModel(
            name='DimDate',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('full_date', models.DateField()),
                ('season_buy', models.CharField(max_length=45)),
                ('season_year_buy', models.CharField(max_length=45)),
                ('season_year_short_buy', models.CharField(max_length=4)),
                ('season_crd', models.CharField(blank=True, max_length=45, null=True)),
                ('season_year_crd', models.CharField(blank=True, max_length=45, null=True)),
                ('season_year_short_crd', models.CharField(blank=True, max_length=4, null=True)),
                ('season_intro', models.CharField(blank=True, max_length=45, null=True)),
                ('season_year_intro', models.CharField(blank=True, max_length=45, null=True)),
                ('season_year_short_intro', models.CharField(blank=True, max_length=4, null=True)),
                ('year_accounting', models.SmallIntegerField()),
                ('year_cw_accounting', models.CharField(max_length=8)),
                ('year_month_accounting', models.CharField(max_length=7)),
                ('month_name_accounting', models.CharField(max_length=45)),
                ('month_name_short_accounting', models.CharField(max_length=3)),
                ('day_of_week', models.IntegerField()),
                ('day_name_of_week', models.CharField(max_length=10)),
                ('is_last_day_of_month', models.IntegerField()),
                ('is_weekend_day', models.IntegerField()),
            ],
            options={
                'db_table': 'dim_date',
            },
        ),
        migrations.CreateModel(
            name='DimDemandCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=45, unique=True)),
            ],
            options={
                'db_table': 'dim_demand_category',
            },
        ),
        migrations.CreateModel(
            name='DimFactory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vendor_group', models.CharField(max_length=45)),
                ('short_name', models.CharField(max_length=45, unique=True)),
                ('long_name', models.CharField(blank=True, max_length=200, null=True)),
                ('port', models.CharField(blank=True, max_length=45, null=True)),
                ('allocation_group', models.CharField(max_length=45)),
                ('valid_acadia_fty_plant_code', models.CharField(blank=True, max_length=45, null=True)),
                ('valid_acadia_vendor_code_1505_1510', models.CharField(blank=True, max_length=45, null=True)),
                ('valid_acadia_vendor_code_1550_mexico', models.CharField(blank=True, max_length=45, null=True)),
                ('condor_factory_code_brazil', models.CharField(blank=True, max_length=45, null=True)),
                ('condor_vendor_code_brazil', models.CharField(blank=True, max_length=45, null=True)),
                ('condor_factory_code_chile', models.CharField(blank=True, max_length=45, null=True)),
                ('condor_vendor_code_chile', models.CharField(blank=True, max_length=45, null=True)),
                ('eu_supplier_code', models.CharField(blank=True, max_length=45, null=True)),
                ('reva_vendor_fty', models.CharField(blank=True, max_length=45, null=True)),
                ('reva_agent_vendor', models.CharField(blank=True, max_length=45, null=True)),
                ('is_active', models.BooleanField()),
                ('is_placeholder', models.BooleanField()),
                ('placeholder_level', models.CharField(blank=True, max_length=45, null=True)),
                ('dim_business', models.ForeignKey(default=1, on_delete=django.db.models.deletion.DO_NOTHING, to='app_pdas.DimBusiness')),
            ],
            options={
                'verbose_name': 'Factory',
                'db_table': 'dim_factory',
            },
            bases=(models.Model, core.mixins_model.ModelFormFieldNames),
        ),
        migrations.CreateModel(
            name='DimLocation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('region', models.CharField(max_length=45)),
                ('country', models.CharField(max_length=100, unique=True)),
                ('country_code_a2', models.CharField(max_length=2, unique=True, validators=[django.core.validators.RegexValidator(code='nomatch', message='Length must be 2', regex='^.{2}$')], verbose_name='country code A2')),
                ('country_code_a3', models.CharField(max_length=3, unique=True, validators=[django.core.validators.RegexValidator(code='nomatch', message='Length must be 3', regex='^.{3}$')], verbose_name='country code A3')),
            ],
            options={
                'verbose_name': 'Location',
                'db_table': 'dim_location',
            },
            bases=(models.Model, core.mixins_model.ModelFormFieldNames),
        ),
        migrations.CreateModel(
            name='DimProduct',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('material', models.CharField(max_length=45, verbose_name='MTL #')),
                ('size', models.CharField(max_length=45)),
                ('style', models.CharField(max_length=45, verbose_name='style #')),
                ('style_erp', models.CharField(blank=True, max_length=45, null=True)),
                ('material_description', models.CharField(blank=True, max_length=100, null=True)),
                ('material_description_erp', models.CharField(blank=True, max_length=100, null=True)),
                ('type', models.CharField(blank=True, max_length=45, null=True)),
                ('style_name', models.CharField(blank=True, max_length=100, null=True)),
                ('style_name_new', models.CharField(blank=True, max_length=45, null=True)),
                ('color_description', models.CharField(max_length=100)),
                ('color_description_erp', models.CharField(blank=True, max_length=100, null=True)),
                ('product_type', models.CharField(blank=True, max_length=45, null=True)),
                ('cat_sub_sbu', models.CharField(blank=True, max_length=45, null=True)),
                ('gender', models.CharField(blank=True, max_length=45, null=True)),
                ('gender_new', models.CharField(blank=True, max_length=45, null=True)),
                ('lifecycle', models.CharField(max_length=45)),
                ('product_cycle', models.CharField(blank=True, max_length=45, null=True)),
                ('style_complexity', models.CharField(max_length=45)),
                ('production_lt', models.IntegerField(blank=True, null=True, verbose_name='production LT')),
                ('pre_build_mtl', models.NullBooleanField(verbose_name='prebuild MTL')),
                ('qt_mtl', models.NullBooleanField(verbose_name='QT MTL')),
                ('clk_mtl', models.NullBooleanField(verbose_name='CLK MTL')),
                ('sjd_mtl', models.NullBooleanField(verbose_name='SJD MTL')),
                ('dtp_mtl', models.NullBooleanField(verbose_name='DTP MTL')),
                ('brt_in_house', models.NullBooleanField(verbose_name='BRT MTL')),
                ('material_emea', models.CharField(blank=True, max_length=45, null=True, verbose_name='MAT # EMEA')),
                ('sku', models.CharField(blank=True, max_length=45, null=True, verbose_name='SKU')),
                ('is_placeholder', models.BooleanField()),
                ('placeholder_level', models.CharField(blank=True, max_length=45, null=True)),
                ('dim_business', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='app_pdas.DimBusiness')),
                ('dim_construction_type', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='app_pdas.DimConstructionType')),
            ],
            options={
                'db_table': 'dim_product',
            },
            bases=(models.Model, core.mixins_model.ModelFormFieldNames),
        ),
        migrations.CreateModel(
            name='DimRelease',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('buy_month', models.CharField(max_length=45)),
                ('comment', models.CharField(max_length=100)),
                ('dim_buying_program', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='app_pdas.DimBuyingProgram')),
                ('dim_date', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='app_pdas.DimDate')),
                ('dim_demand_category', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='app_pdas.DimDemandCategory')),
            ],
            options={
                'db_table': 'dim_release',
            },
        ),
        migrations.CreateModel(
            name='FactDemandTotal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dim_date_forecast_vs_actual', models.IntegerField(blank=True, null=True)),
                ('order_number', models.CharField(max_length=45)),
                ('pr_code', models.CharField(blank=True, max_length=45, null=True)),
                ('pr_cut_code', models.CharField(blank=True, max_length=45, null=True)),
                ('po_code_customer', models.CharField(blank=True, max_length=45, null=True)),
                ('so_code', models.CharField(blank=True, max_length=45, null=True)),
                ('is_asap', models.IntegerField()),
                ('quantity_lum', models.IntegerField(blank=True, null=True)),
                ('quantity_non_lum', models.IntegerField(blank=True, null=True)),
                ('quantity_unconsumed', models.IntegerField()),
                ('quantity', models.IntegerField()),
                ('quantity_region_mtl_lvl', models.IntegerField(blank=True, null=True)),
                ('quantity_customer_mtl_lvl', models.IntegerField(blank=True, null=True)),
                ('comment_vfa', models.CharField(blank=True, max_length=1000, null=True)),
                ('edit_dt', models.DateTimeField(blank=True, null=True)),
                ('allocation_logic_unconstrained', models.CharField(blank=True, max_length=1000, null=True)),
                ('allocation_logic_constrained', models.CharField(blank=True, max_length=1000, null=True)),
                ('customer_moq', models.IntegerField(blank=True, null=True)),
                ('customer_below_moq', models.IntegerField(blank=True, null=True)),
                ('region_moq', models.IntegerField(blank=True, null=True)),
                ('region_below_moq', models.IntegerField(blank=True, null=True)),
                ('upcharge', models.FloatField(blank=True, null=True)),
                ('is_rejected', models.IntegerField(blank=True, null=True)),
                ('material_sr', models.CharField(blank=True, max_length=45, null=True)),
                ('component_factory_short_name', models.CharField(blank=True, max_length=45, null=True)),
                ('production_lt_actual_buy', models.IntegerField(blank=True, null=True)),
                ('production_lt_actual_vendor', models.IntegerField(blank=True, null=True)),
                ('comment_region', models.CharField(blank=True, max_length=1000, null=True)),
                ('sold_to_customer_name', models.CharField(blank=True, max_length=100, null=True)),
                ('mcq', models.IntegerField(blank=True, null=True)),
                ('musical_cnt', models.CharField(blank=True, max_length=45, null=True)),
                ('delivery_d', models.DateField(blank=True, null=True)),
                ('confirmed_price_in_solid_size', models.FloatField(blank=True, null=True)),
                ('fabriq_moq', models.IntegerField(blank=True, null=True)),
                ('confirmed_crd_dt', models.DateField(blank=True, null=True)),
                ('confirmed_unit_price_memo', models.CharField(blank=True, max_length=45, null=True)),
                ('confirmed_unit_price_po', models.FloatField(blank=True, null=True)),
                ('cy_csf_load', models.CharField(blank=True, max_length=45, null=True)),
                ('min_surcharge', models.CharField(blank=True, max_length=45, null=True)),
                ('confirmed_unit_price_vendor', models.CharField(blank=True, max_length=45, null=True)),
                ('nominated_supplier_name', models.CharField(blank=True, max_length=45, null=True)),
                ('comment_vendor', models.CharField(blank=True, max_length=45, null=True)),
                ('confirmed_comp_eta_hk', models.CharField(blank=True, max_length=45, null=True)),
                ('comment_comp_factory', models.CharField(blank=True, max_length=45, null=True)),
                ('buy_comment', models.CharField(blank=True, max_length=1000, null=True)),
                ('status_orig_req', models.IntegerField(blank=True, null=True)),
                ('performance_orig_req', models.CharField(blank=True, max_length=45, null=True)),
                ('smu', models.CharField(blank=True, max_length=45, null=True)),
                ('order_reference', models.CharField(blank=True, max_length=45, null=True)),
                ('sku_footlocker', models.CharField(blank=True, max_length=45, null=True)),
                ('prepack_code', models.CharField(blank=True, max_length=45, null=True)),
                ('exp_delivery_with_constraint', models.CharField(blank=True, max_length=45, null=True)),
                ('exp_delivery_without_constraint', models.CharField(blank=True, max_length=45, null=True)),
                ('coo', models.CharField(blank=True, max_length=45, null=True)),
                ('remarks_region', models.CharField(blank=True, max_length=100, null=True)),
                ('need_to_reallocate', models.CharField(blank=True, max_length=45, null=True)),
                ('dim_business', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='app_pdas.DimBusiness')),
                ('dim_buying_program', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='app_pdas.DimBuyingProgram')),
                ('dim_customer', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='app_pdas.DimCustomer')),
                ('dim_date', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='app_pdas.DimDate')),
                ('dim_date_buy_month', models.ForeignKey(db_column='dim_date_buy_month', on_delete=django.db.models.deletion.DO_NOTHING, related_name='dim_date_buy_month', to='app_pdas.DimDate')),
                ('dim_demand_category', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='app_pdas.DimDemandCategory')),
                ('dim_factory', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='dim_factory', to='app_pdas.DimFactory')),
                ('dim_factory_final', models.ForeignKey(db_column='dim_factory_final', on_delete=django.db.models.deletion.DO_NOTHING, related_name='dim_factory_final', to='app_pdas.DimFactory')),
                ('dim_factory_original_constrained', models.ForeignKey(db_column='dim_factory_original_constrained', on_delete=django.db.models.deletion.DO_NOTHING, related_name='dim_factory_original_constrained', to='app_pdas.DimFactory')),
                ('dim_factory_original_unconstrained', models.ForeignKey(db_column='dim_factory_original_unconstrained', on_delete=django.db.models.deletion.DO_NOTHING, related_name='dim_factory_original_unconstrained', to='app_pdas.DimFactory')),
                ('dim_product', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='app_pdas.DimProduct')),
                ('dim_release', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='app_pdas.DimRelease')),
            ],
            options={
                'db_table': 'fact_demand_total',
            },
            bases=(models.Model, core.mixins_model.ModelFormFieldNames),
        ),
        migrations.CreateModel(
            name='FactFactoryCapacity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('capacity_raw_daily', models.IntegerField()),
                ('capacity_raw_weekly', models.IntegerField()),
                ('capacity_raw_daily_overwritten', models.IntegerField()),
                ('capacity_raw_weekly_overwritten', models.IntegerField()),
                ('capacity_available_weekly', models.IntegerField()),
                ('capacity_available_weekly_adjusted', models.IntegerField()),
                ('percentage_region', models.FloatField()),
                ('percentage_from_original', models.FloatField()),
                ('dim_business', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='app_pdas.DimBusiness')),
                ('dim_construction_type', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='app_pdas.DimConstructionType')),
                ('dim_customer', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='app_pdas.DimCustomer')),
                ('dim_date', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='app_pdas.DimDate')),
                ('dim_factory', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='app_pdas.DimFactory')),
            ],
            options={
                'db_table': 'fact_factory_capacity',
            },
        ),
        migrations.CreateModel(
            name='FactPriorityList',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dim_factory_2', models.IntegerField(blank=True, null=True)),
                ('production_lt', models.IntegerField(blank=True, null=True)),
                ('llt', models.CharField(blank=True, max_length=45, null=True)),
                ('co_cu_new', models.CharField(blank=True, max_length=45, null=True)),
                ('asia_development_buy_ready', models.CharField(blank=True, max_length=45, null=True)),
                ('dim_business', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='app_pdas.DimBusiness')),
                ('dim_factory_1', models.ForeignKey(db_column='dim_factory_1', on_delete=django.db.models.deletion.DO_NOTHING, to='app_pdas.DimFactory')),
                ('dim_product', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='app_pdas.DimProduct')),
                ('dim_release', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='app_pdas.DimRelease')),
            ],
            options={
                'db_table': 'fact_priority_list',
            },
        ),
        migrations.CreateModel(
            name='HelperPdasFootwearVansAvgFob',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('factory_short_name', models.CharField(max_length=45, verbose_name='factory code')),
                ('material', models.CharField(max_length=45, verbose_name='MTL#')),
                ('fob', models.FloatField(verbose_name='FOB')),
            ],
            options={
                'verbose_name': 'FOB Confirmation',
                'db_table': 'helper_pdas_footwear_vans_avg_fob',
            },
            bases=(models.Model, core.mixins_model.ModelFormFieldNames),
        ),
        migrations.CreateModel(
            name='HelperPdasFootwearVansCutoff',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country_code_a2', models.CharField(max_length=2, verbose_name='country code A2')),
                ('port_code', models.CharField(max_length=45, verbose_name='port code')),
                ('port_name', models.CharField(max_length=45, verbose_name='port name')),
                ('cutoff_day_eu_dc', models.CharField(max_length=45, verbose_name='cutoff day EU DC')),
                ('cutoff_day_eu_crossdock', models.CharField(max_length=45, verbose_name='cutoff day EU Crossdock')),
                ('comment', models.CharField(blank=True, max_length=1000, null=True)),
            ],
            options={
                'verbose_name': 'Cutoff EMEA',
                'db_table': 'helper_pdas_footwear_vans_cutoff',
            },
            bases=(models.Model, core.mixins_model.ModelFormFieldNames),
        ),
        migrations.CreateModel(
            name='HelperPdasFootwearVansFactoryCapacityAdjustment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('factory_short_name', models.CharField(max_length=45, unique=True, verbose_name='factory code')),
                ('percentage', models.FloatField()),
                ('percentage_adjustment', models.FloatField()),
            ],
            options={
                'verbose_name': 'Factory Capacity Adjustment',
                'db_table': 'helper_pdas_footwear_vans_factory_capacity_adjustment',
            },
            bases=(models.Model, core.mixins_model.ModelFormFieldNames),
        ),
        migrations.CreateModel(
            name='HelperPdasFootwearVansFactoryCapacityByRegion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('factory_short_name', models.CharField(max_length=45, unique=True, verbose_name='factory code')),
                ('emea', models.FloatField(verbose_name='EMEA')),
                ('apac', models.FloatField(verbose_name='APAC')),
                ('casa', models.FloatField(verbose_name='CASA')),
                ('nora', models.FloatField(verbose_name='NORA')),
            ],
            options={
                'verbose_name': 'Factory Capacity by Region',
                'db_table': 'helper_pdas_footwear_vans_factory_capacity_by_region',
            },
            bases=(models.Model, core.mixins_model.ModelFormFieldNames),
        ),
        migrations.CreateModel(
            name='HelperPdasFootwearVansFtyQt',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('material', models.CharField(max_length=45, verbose_name='MTL#')),
                ('factory_short_name', models.CharField(max_length=45)),
                ('qt_leadtime', models.IntegerField(verbose_name='QT leadtime')),
                ('comment', models.CharField(blank=True, max_length=1000, null=True)),
            ],
            options={
                'verbose_name': 'Factory QT',
                'db_table': 'helper_pdas_footwear_vans_fty_qt',
            },
            bases=(models.Model, core.mixins_model.ModelFormFieldNames),
        ),
        migrations.CreateModel(
            name='HelperPdasFootwearVansLabelUpcharge',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('customer_name', models.CharField(max_length=45)),
                ('product_type', models.CharField(max_length=45)),
                ('label_upcharge', models.FloatField()),
            ],
            options={
                'verbose_name': 'Label Upcharge',
                'db_table': 'helper_pdas_footwear_vans_label_upcharge',
            },
            bases=(models.Model, core.mixins_model.ModelFormFieldNames),
        ),
        migrations.CreateModel(
            name='HelperPdasFootwearVansMapping',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(max_length=100)),
                ('parent', models.CharField(max_length=200)),
                ('child', models.CharField(max_length=100)),
                ('comment', models.CharField(blank=True, max_length=1000, null=True)),
            ],
            options={
                'verbose_name': 'Mapping',
                'db_table': 'helper_pdas_footwear_vans_mapping',
            },
            bases=(models.Model, core.mixins_model.ModelFormFieldNames),
        ),
        migrations.CreateModel(
            name='HelperPdasFootwearVansMoqPolicy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_type', models.CharField(max_length=45)),
                ('from_by_region', models.IntegerField()),
                ('to_by_region', models.IntegerField()),
                ('from_by_customer', models.IntegerField()),
                ('to_by_customer', models.IntegerField()),
                ('upcharge', models.FloatField(default=0)),
                ('reject', models.CharField(default='No', max_length=3)),
                ('comment', models.CharField(blank=True, max_length=1000, null=True)),
            ],
            options={
                'verbose_name': 'MOQ Policy',
                'db_table': 'helper_pdas_footwear_vans_moq_policy',
            },
            bases=(models.Model, core.mixins_model.ModelFormFieldNames),
        ),
        migrations.CreateModel(
            name='HelperPdasFootwearVansPerformance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('days_delay', models.IntegerField(verbose_name='days of delay')),
                ('delivery_performance', models.CharField(max_length=45)),
            ],
            options={
                'verbose_name': 'Performance',
                'db_table': 'helper_pdas_footwear_vans_performance',
            },
            bases=(models.Model, core.mixins_model.ModelFormFieldNames),
        ),
        migrations.CreateModel(
            name='HelperPdasFootwearVansPrebuild',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('region', models.CharField(max_length=45)),
                ('material', models.CharField(max_length=45, verbose_name='MTL#')),
                ('size', models.CharField(max_length=45)),
                ('factory_short_name', models.CharField(max_length=45, verbose_name='factory code')),
                ('current_balance', models.IntegerField()),
                ('buying_program_name', models.CharField(max_length=45)),
                ('status', models.CharField(max_length=45)),
                ('cancellation_cost_per_unit', models.FloatField()),
                ('comment', models.CharField(blank=True, max_length=1000, null=True)),
            ],
            options={
                'verbose_name': 'Prebuild Balance',
                'db_table': 'helper_pdas_footwear_vans_prebuild',
            },
            bases=(models.Model, core.mixins_model.ModelFormFieldNames),
        ),
        migrations.CreateModel(
            name='HelperPdasFootwearVansReleaseCurrent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dim_release', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='app_pdas.DimRelease', verbose_name='release')),
            ],
            options={
                'verbose_name': 'Current Release',
                'db_table': 'helper_pdas_footwear_vans_release_current',
            },
        ),
        migrations.CreateModel(
            name='HelperPdasFootwearVansRetailQt',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(max_length=45)),
                ('region', models.CharField(max_length=45)),
                ('sold_to_party', models.CharField(max_length=45)),
                ('material', models.CharField(max_length=45, verbose_name='MTL#')),
                ('factory_short_name', models.CharField(max_length=45, verbose_name='factory code')),
                ('buying_program_name', models.CharField(max_length=45)),
                ('comment', models.CharField(blank=True, max_length=1000, null=True)),
            ],
            options={
                'verbose_name': 'Retail QT',
                'db_table': 'helper_pdas_footwear_vans_retail_qt',
            },
            bases=(models.Model, core.mixins_model.ModelFormFieldNames),
        ),
        migrations.CreateModel(
            name='PdasMetadata',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('table_name', models.CharField(max_length=100)),
                ('etl_type', models.CharField(max_length=45)),
                ('src_name', models.CharField(max_length=100, verbose_name='source file')),
                ('timestamp_file', models.DateTimeField(verbose_name='last modified date')),
                ('state', models.CharField(max_length=3)),
            ],
            options={
                'db_table': 'pdas_metadata',
            },
            bases=(models.Model, core.mixins_model.ModelFormFieldNames),
        ),
        migrations.CreateModel(
            name='SystemLogFile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('system', models.CharField(max_length=30)),
                ('source', models.CharField(max_length=100)),
                ('category', models.CharField(max_length=100)),
                ('value', models.CharField(max_length=300)),
            ],
            options={
                'db_table': 'system_log_file',
            },
            bases=(models.Model, core.mixins_model.ModelFormFieldNames),
        ),
        migrations.AlterUniqueTogether(
            name='helperpdasfootwearvansretailqt',
            unique_together=set([('region', 'sold_to_party', 'material', 'factory_short_name')]),
        ),
        migrations.AlterUniqueTogether(
            name='helperpdasfootwearvansprebuild',
            unique_together=set([('region', 'material', 'size', 'factory_short_name', 'buying_program_name')]),
        ),
        migrations.AlterUniqueTogether(
            name='helperpdasfootwearvansmapping',
            unique_together=set([('category', 'child')]),
        ),
        migrations.AlterUniqueTogether(
            name='helperpdasfootwearvanslabelupcharge',
            unique_together=set([('customer_name', 'product_type')]),
        ),
        migrations.AlterUniqueTogether(
            name='helperpdasfootwearvansftyqt',
            unique_together=set([('material', 'factory_short_name')]),
        ),
        migrations.AlterUniqueTogether(
            name='helperpdasfootwearvanscutoff',
            unique_together=set([('country_code_a2', 'port_code')]),
        ),
        migrations.AlterUniqueTogether(
            name='helperpdasfootwearvansavgfob',
            unique_together=set([('factory_short_name', 'material')]),
        ),
        migrations.AddField(
            model_name='dimfactory',
            name='dim_location',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='app_pdas.DimLocation', verbose_name='country code A2'),
        ),
        migrations.AddField(
            model_name='dimcustomer',
            name='dim_location',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='app_pdas.DimLocation', verbose_name='country code A2'),
        ),
        migrations.AlterUniqueTogether(
            name='dimbusiness',
            unique_together=set([('brand', 'product_line')]),
        ),
        migrations.AlterUniqueTogether(
            name='factprioritylist',
            unique_together=set([('dim_release', 'dim_business', 'dim_product')]),
        ),
        migrations.AlterUniqueTogether(
            name='factfactorycapacity',
            unique_together=set([('dim_business', 'dim_factory', 'dim_customer', 'dim_construction_type', 'dim_date')]),
        ),
        migrations.AlterUniqueTogether(
            name='dimrelease',
            unique_together=set([('dim_demand_category', 'dim_buying_program', 'buy_month')]),
        ),
        migrations.AlterUniqueTogether(
            name='dimproduct',
            unique_together=set([('material', 'size')]),
        ),
        migrations.AlterUniqueTogether(
            name='dimfactory',
            unique_together=set([('id', 'dim_business')]),
        ),
        migrations.AlterUniqueTogether(
            name='dimbuyingprogram',
            unique_together=set([('id', 'dim_business')]),
        ),
    ]
